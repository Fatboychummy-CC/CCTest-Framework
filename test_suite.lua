local suite = require "Framework.suite"
--require "Framework.logger".verbose = true

---@diagnostic disable: undefined-global We will be using a bunch of globals here defined in another location.

local mySuite = suite.suite "Suite Methods"
  "Pass" (function()
    PASS()
  end)
  "Fail" (function()
    FAIL()
  end)
  "Pass after failure" (function()
    FAIL()
    PASS()
  end)
  "EXPECT_EQ Pass" (function()
    EXPECT_EQ(1, 1)
  end)
  "EXPECT_EQ Fail" (function()
    EXPECT_EQ(1, 2)
  end)
  "ASSERT_EQ Pass" (function()
    ASSERT_EQ(1, 1)
  end)
  "ASSERT_EQ Fail" (function()
    ASSERT_EQ(1, 2)
  end)
  "EXPECT_NEQ Pass" (function()
    EXPECT_NEQ(1, 2)
  end)
  "EXPECT_NEQ Fail" (function()
    EXPECT_NEQ(1, 1)
  end)
  "ASSERT_NEQ Pass" (function()
    ASSERT_NEQ(1, 2)
  end)
  "ASSERT_NEQ Fail" (function()
    ASSERT_NEQ(1, 1)
  end)
  "EXPECT_TRUE Pass" (function()
    EXPECT_TRUE(true)
  end)
  "EXPECT_TRUE Fail" (function()
    EXPECT_TRUE(false)
  end)
  "ASSERT_TRUE Pass" (function()
    ASSERT_TRUE(true)
  end)
  "ASSERT_TRUE Fail" (function()
    ASSERT_TRUE(false)
  end)
  "EXPECT_FALSE Pass" (function()
    EXPECT_FALSE(false)
  end)
  "EXPECT_FALSE Fail" (function()
    EXPECT_FALSE(true)
  end)
  "ASSERT_FALSE Pass" (function()
    ASSERT_FALSE(false)
  end)
  "ASSERT_FALSE Fail" (function()
    ASSERT_FALSE(true)
  end)
  "EXPECT_TRUTHY Pass" (function()
    EXPECT_TRUTHY(1)
    EXPECT_TRUTHY("a")
    EXPECT_TRUTHY(true)
  end)
  "EXPECT_TRUTHY Fail" (function()
    EXPECT_TRUTHY(false)
    EXPECT_TRUTHY(nil)
  end)
  "ASSERT_TRUTHY Pass" (function()
    ASSERT_TRUTHY(1)
    ASSERT_TRUTHY("a")
    ASSERT_TRUTHY(true)
  end)
  "ASSERT_TRUTHY Fail" (function()
    ASSERT_TRUTHY(false)
  end)
  "EXPECT_FALSY Pass" (function()
    EXPECT_FALSY(false)
    EXPECT_FALSY(nil)
  end)
  "EXPECT_FALSY Fail" (function()
    EXPECT_FALSY(true)
    EXPECT_FALSY(1)
    EXPECT_FALSY("a")
  end)
  "ASSERT_FALSY Pass" (function()
    ASSERT_FALSY(false)
    ASSERT_FALSY(nil)
  end)
  "ASSERT_FALSY Fail" (function()
    ASSERT_FALSY(true)
  end)
  "EXPECT_NIL Pass" (function()
    EXPECT_NIL(nil)
  end)
  "EXPECT_NIL Fail" (function()
    EXPECT_NIL(false)
    EXPECT_NIL(1)
    EXPECT_NIL("a")
  end)
  "ASSERT_NIL Pass" (function()
    ASSERT_NIL(nil)
  end)
  "ASSERT_NIL Fail" (function()
    ASSERT_NIL(false)
  end)
  "EXPECT_NOT_NIL Pass" (function()
    EXPECT_NOT_NIL(false)
    EXPECT_NOT_NIL(1)
    EXPECT_NOT_NIL("a")
  end)
  "EXPECT_NOT_NIL Fail" (function()
    EXPECT_NOT_NIL(nil)
  end)
  "ASSERT_NOT_NIL Pass" (function()
    ASSERT_NOT_NIL(false)
    ASSERT_NOT_NIL(1)
    ASSERT_NOT_NIL("a")
  end)
  "ASSERT_NOT_NIL Fail" (function()
    ASSERT_NOT_NIL(nil)
  end)
  "EXPECT_THROWS Pass" (function()
    EXPECT_THROWS(function() error("test") end)
  end)
  "EXPECT_THROWS Fail" (function()
    EXPECT_THROWS(function() end)
  end)
  "ASSERT_THROWS Pass" (function()
    ASSERT_THROWS(function() error("test") end)
  end)
  "ASSERT_THROWS Fail" (function()
    ASSERT_THROWS(function() end)
  end)
  "EXPECT_THROWS_MATCH Pass" (function()
    EXPECT_THROWS_MATCH(function() error("test") end, "test")
  end)
  "EXPECT_THROWS_MATCH Fail" (function()
    EXPECT_THROWS_MATCH(function() error("test") end, "test2")
  end)
  "ASSERT_THROWS_MATCH Pass" (function()
    ASSERT_THROWS_MATCH(function() error("test") end, "test")
  end)
  "ASSERT_THROWS_MATCH Fail" (function()
    ASSERT_THROWS_MATCH(function() error("test") end, "test2")
  end)
  "EXPECT_TYPE Pass" (function()
    EXPECT_TYPE(1, "number")
    EXPECT_TYPE("a", "string")
    EXPECT_TYPE(true, "boolean")
    EXPECT_TYPE(nil, "nil")
    EXPECT_TYPE({}, "table")
    EXPECT_TYPE(function() end, "function")
    EXPECT_TYPE(coroutine.create(function() end), "thread")
  end)
  "EXPECT_TYPE Fail" (function()
    EXPECT_TYPE(1, "string")
  end)
  "ASSERT_TYPE Pass" (function()
    ASSERT_TYPE(1, "number")
    ASSERT_TYPE("a", "string")
    ASSERT_TYPE(true, "boolean")
    ASSERT_TYPE(nil, "nil")
    ASSERT_TYPE({}, "table")
    ASSERT_TYPE(function() end, "function")
    ASSERT_TYPE(coroutine.create(function() end), "thread")
  end)
  "ASSERT_TYPE Fail" (function()
    ASSERT_TYPE(1, "string")
  end)
  "EXPECT_GT Pass" (function()
    EXPECT_GT(2, 1)
  end)
  "EXPECT_GT Fail" (function()
    EXPECT_GT(1, 2)
  end)
  "ASSERT_GT Pass" (function()
    ASSERT_GT(2, 1)
  end)
  "ASSERT_GT Fail" (function()
    ASSERT_GT(1, 2)
  end)
  "EXPECT_GE Pass" (function()
    EXPECT_GE(2, 1)
    EXPECT_GE(1, 1)
  end)
  "EXPECT_GE Fail" (function()
    EXPECT_GE(1, 2)
  end)
  "ASSERT_GE Pass" (function()
    ASSERT_GE(2, 1)
    ASSERT_GE(1, 1)
  end)
  "ASSERT_GE Fail" (function()
    ASSERT_GE(1, 2)
  end)
  "EXPECT_LT Pass" (function()
    EXPECT_LT(1, 2)
  end)
  "EXPECT_LT Fail" (function()
    EXPECT_LT(2, 1)
  end)
  "ASSERT_LT Pass" (function()
    ASSERT_LT(1, 2)
  end)
  "ASSERT_LT Fail" (function()
    ASSERT_LT(2, 1)
  end)
  "EXPECT_LE Pass" (function()
    EXPECT_LE(1, 2)
    EXPECT_LE(1, 1)
  end)
  "EXPECT_LE Fail" (function()
    EXPECT_LE(2, 1)
  end)
  "ASSERT_LE Pass" (function()
    ASSERT_LE(1, 2)
    ASSERT_LE(1, 1)
  end)
  "ASSERT_LE Fail" (function()
    ASSERT_LE(2, 1)
  end)
  "EXPECT_FLOAT_EQ Pass" (function()
    EXPECT_FLOAT_EQ(1, 1.000001)
  end)
  "EXPECT_FLOAT_EQ Fail" (function()
    EXPECT_FLOAT_EQ(1, 1.1)
  end)
  "ASSERT_FLOAT_EQ Pass" (function()
    ASSERT_FLOAT_EQ(1, 1.000001)
  end)
  "ASSERT_FLOAT_EQ Fail" (function()
    ASSERT_FLOAT_EQ(1, 1.1)
  end)
  "EXPECT_MATCH Pass" (function()
    EXPECT_MATCH("test", "test")
    EXPECT_MATCH("test", "test2", "test")
  end)
  "EXPECT_MATCH Fail" (function()
    EXPECT_MATCH("test", "test2")
  end)
  "ASSERT_MATCH Pass" (function()
    ASSERT_MATCH("test", "test")
    ASSERT_MATCH("test", "test2", "test")
  end)
  "ASSERT_MATCH Fail" (function()
    ASSERT_MATCH("test", "test2")
  end)
  "EXPECT_DEEP_EQ Pass" (function()
    EXPECT_DEEP_EQ({1, 2, 3}, {1, 2, 3})
    EXPECT_DEEP_EQ({x={1, 2, 3}}, {x={1, 2, 3}})
  end)
  "EXPECT_DEEP_EQ Fail" (function()
    EXPECT_DEEP_EQ({1, 2, 3}, {1, 2, 4})
    EXPECT_DEEP_EQ({x={1, 2, 3}}, {x={1, 2, 4}})
  end)
  "ASSERT_DEEP_EQ Pass" (function()
    ASSERT_DEEP_EQ({1, 2, 3}, {1, 2, 3})
    ASSERT_DEEP_EQ({x={1, 2, 3}}, {x={1, 2, 3}})
  end)
  "ASSERT_DEEP_EQ Fail" (function()
    ASSERT_DEEP_EQ({1, 2, 3}, {1, 2, 4})
    ASSERT_DEEP_EQ({x={1, 2, 3}}, {x={1, 2, 4}})
  end)



-- Load the other test suite.
require("multisuite_test")

suite.run_all_suites()